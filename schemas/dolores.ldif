# SCHEMA "DOLORES"
dn: cn=dolores,cn=schema,cn=config
objectclass: olcSchemaConfig
cn: dolores
olcAttributeTypes: ( 0.9.3.2.8.0.1 NAME ( 'id' )
  DESC 'Kevin.Gong unit id'
  EQUALITY caseIgnoreMatch
  SUBSTR caseIgnoreSubstringsMatch
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.15{256} )
olcAttributeTypes: ( 0.9.3.2.8.0.2 NAME ( 'thirdAccount' )
  DESC 'Kevin.Gong: thrid party account id'
  EQUALITY caseIgnoreMatch
  SUBSTR caseIgnoreSubstringsMatch
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.15{256} )
olcAttributeTypes: ( 0.9.3.2.8.0.3 NAME ( 'thirdPassword' )
  DESC 'Kevin.Gong: password of im'
  EQUALITY octetStringMatch
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.40{256} )
olcAttributeTypes: ( 0.9.3.2.8.0.4 NAME ( 'rbacType' )
  DESC 'Kevin.Gong: rbace tpe for dolores.'
  EQUALITY caseIgnoreMatch
  SUBSTR caseIgnoreSubstringsMatch
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.15{256} )
olcAttributeTypes: ( 0.9.3.2.8.0.5 NAME 'rbacRole'
  DESC 'Kevin.Gong: rbac alc of role'
  EQUALITY caseExactMatch
  SUBSTR caseIgnoreSubstringsMatch
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.15
  USAGE userApplications )
olcAttributeTypes: ( 0.9.3.2.8.0.6 NAME ( 'unitpermissionIdentifier' 'upid' )
  DESC 'Kevin.Gong: unit permission ids'
  EQUALITY caseIgnoreMatch
  SUBSTR caseIgnoreSubstringsMatch
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.15{256} )
olcAttributeTypes: ( 0.9.3.2.8.0.7 NAME ( 'personpermissionIdentifier' 'ppid' )
  DESC 'Kevin.Gong: person permission ids'
  EQUALITY caseIgnoreMatch
  SUBSTR caseIgnoreSubstringsMatch
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.15{256} )
olcAttributeTypes: ( 0.9.3.2.8.0.8 NAME ( 'unitID' )
  DESC 'Kevin.Gong unit id'
  EQUALITY caseIgnoreMatch
  SUBSTR caseIgnoreSubstringsMatch
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.15{256} )
olcObjectClasses: ( 0.9.3.2.8.1.1 NAME 'member'
  DESC 'Kevin.Gong: member for dolores'
  STRUCTURAL
  MUST (id $ rbacRole $ rbacType $ unitID $ cn )
  MAY ( thirdAccount $ thirdPassword $ email $ title $ sn ) )
olcObjectClasses: ( 0.9.3.2.8.1.2 NAME 'unit'
  DESC 'Kevin.Gong: unit extended for dolores.'
  AUXILIARY
  MUST ( id $ rbacType ))
olcObjectClasses: ( 0.9.3.2.8.1.3 NAME ( 'permission' )
  DESC 'Kevin.Gong: permission for dolores.'
  SUP top
  STRUCTURAL
  MUST ( id $ rbacType )
  MAY ( cn $ description ) )
olcObjectClasses: ( 0.9.3.2.8.1.4 NAME 'role'
  DESC 'Kevin.Gong: role for dolores.'
  SUP top
  STRUCTURAL
  MUST ( cn $ id $ upid $ ppid )
  MAY description )
olcObjectClasses: ( 0.9.3.2.8.1.5 NAME 'doloresType'
  DESC 'Kevin.Gong: deparment & person type for dolores.'
  SUP top
  STRUCTURAL
  MUST ( id $ cn )
  MAY ( description ) )
